#!/usr/bin/env python

from argparse import ArgumentParser, RawTextHelpFormatter
from os import environ
import json
import logging
import requests

HELP_DEFINITION='''
Script to initiate Gitea Image registry organization
'''
HELP_EXAMPLE='''
Example:
\n\t./init-regisitry-org.py 
  --org org1,org2,org3 \
  --url https://example.com/gitea \
  --user username --password password
'''

headers= {
    'Content-type': 'application/json'
}

def create_org(url, org, basic):
    org_data={'visibility': 'limited'}
    org_data['username'] = org
    logging.info('Creating organisation %s' % org)
    logging.debug('Argument:%s' % json.dumps(org_data))
    res=requests.post('%s/api/v1/orgs' % url, auth=basic,headers=headers,data=json.dumps(org_data))
    res.raise_for_status()
    return res

def parse_args():
    parser = ArgumentParser(description=HELP_DEFINITION, epilog=HELP_EXAMPLE, formatter_class=RawTextHelpFormatter)
    parser.add_argument('-o', '--org',      required=True,  help='List of organization to create in Gitea. Separate each value with ","')
    parser.add_argument('-U', '--url',      required=True,  help='URL of the Gitea instance')
    parser.add_argument('-u', '--username', default=environ.get('GITEA_USERNAME'), help='Gitea API Username')
    parser.add_argument('-p', '--password', default=environ.get('GITEA_PASSWORD'),  help='Gitea API Password')
    parser.add_argument('-l', '--log',      required=False, default='INFO')
    args = parser.parse_args()
    assert args.username and args.password, parser.error('No API username or password!')
    return args


def main():
    args = parse_args()
    logging.basicConfig(level=args.log.upper())
    basic = requests.auth.HTTPBasicAuth(args.username, args.password)
    orgs=args.org.split(',')
    for org in orgs:
        try:
            create_org(args.url, org, basic)
        except requests.exceptions.HTTPError as err:
            if err.response.status_code == 422 and 'user already exists' in err.response.text:
                logging.info('Org %s already existing' % org)
            else:
                logging.error('Error %s when trying to create the org %s: %s' 
                    % (err.response.status_code, org, err.response.text))
                exit(1)
if __name__ == '__main__':
  main()
